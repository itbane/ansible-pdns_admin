---
- name: Copy {{ pdns_admin_conf_filename }}
  template:
    src: "{{ pdns_admin_conf_template_filename }}"
    dest: "{{ pdns_admin_conf_filepath }}"
    owner: root
    group: root
  notify: Restart Powerdns Admin Service
  tags:
    - pdns-admin-config

- name: Create the pdns-admin MySQL databases
  mysql_db:
    login_user: "{{ pdns_admin_database_credentials['priv_user'] }}"
    login_password: "{{ pdns_admin_database_credentials['priv_password'] }}"
    login_host: "{{ pdns_admin_database_config['sqla_db_host'] }}"
    login_port: "{{ pdns_admin_database_config['sqla_db_port'] | default('3306') }}"
    name: "{{ pdns_admin_database_config['sqla_db_name'] }}"
    state: present

- name: Grant pdns-admin access to the MySQL databases
  mysql_user:
    login_user: "{{ pdns_admin_database_credentials['priv_user'] }}"
    login_password: "{{ pdns_admin_database_credentials['priv_password'] }}"
    login_host: "{{ pdns_admin_database_config['sqla_db_host'] }}"
    login_port: "{{ pdns_admin_database_config['sqla_db_port'] | default('3306') }}"
    name: "{{ pdns_admin_database_config['sqla_db_user'] }}"
    password: "{{ pdns_admin_database_config['sqla_db_password'] }}"
    host: "{{ pdns_admin_database_config['sqla_db_host'] }}"
    priv: "{{ pdns_admin_database_config['sqla_db_name'] }}.*:ALL"
    append_privs: yes
    state: present

- name: Set up the flask installation
  shell: >
    cd {{ pdns_admin_path }};
    source {{ pdns_admin_python_venv_path }}/bin/activate;
    export FLASK_APP={{pdns_admin_path}}/powerdnsadmin/__init__.py;
    export FLASK_CONF={{pdns_admin_conf_filepath}};
    {{pdns_admin_python_venv_path}}/bin/flask db upgrade;
    yarnpkg install --pure-lockfile;
    {{pdns_admin_python_venv_path}}/bin/flask assets build;
  register: tmpout

- debug:
    msg: "{{ tmpout }}"

- name: Drop PowerDNS Admin systemd file
  template:
    src: "{{ pdns_admin_systemd_template_filename }}"
    dest: "{{ pdns_admin_systemd_filepath }}"
    owner: root
    group: root

- name: Make PowerDNS Admin as service
  systemd:
    name: "{{ pdns_admin_systemd_filename }}"
    state: restarted
    enabled: yes
    daemon_reload: yes
